// Generated by Qodo Gen

describe('updateCartCount', () => {

    // Updates cart count display with sum of all item quantities
    it('should update cart count elements with total quantity from cart items', () => {
      const mockCartItems = [
        { quantity: 2 },
        { quantity: 3 }
      ];
      jest.spyOn(window, 'getCartItems').mockReturnValue(mockCartItems);
  
      const mockElements = [
        { innerText: '' },
        { innerText: '' }
      ];
      jest.spyOn(document, 'querySelectorAll')
        .mockReturnValue(mockElements);
  
      updateCartCount();
  
      mockElements.forEach(el => {
        expect(el.innerText).toBe(5);
      });
    });

    // Handles empty/null cart data from localStorage
    it('should display 0 when cart is empty', () => {
      jest.spyOn(window, 'getCartItems').mockReturnValue([]);
  
      const mockElements = [
        { innerText: '' },
        { innerText: '' }
      ];
      jest.spyOn(document, 'querySelectorAll')
        .mockReturnValue(mockElements);
  
      updateCartCount();
  
      mockElements.forEach(el => {
        expect(el.innerText).toBe(0);
      });
    });
});
